//----------------------------------------------
//  Grid / Containers
//  Our global grid container, to be applies as a
//  helper class, or placeholder extend.
//----------------------------------------------
%grid, .grid {
  position: relative;
  width: $grid-width;
  max-width: $grid-max-width;
  display: block;
  margin-left: auto;
  margin-right: auto;

  @media (min-width: $mq-med) {
    width: $grid-width-med;
  }
}

.grid-sm{
  @extend %grid;
  @media (min-width: $mq-med) {
    max-width: $grid-max-width-sm;
  }
}

.grid-lg{
  @extend %grid;
  max-width: $grid-max-width-lg;
  @media (min-width: $mq-med) {
    width: $grid-width-lg;
  }
}

.grid-xl {
  @extend %grid;
  width: $grid-max-width-xxl;
  max-width: $grid-max-width-xxl;
  @media (min-width: $mq-med){
    width: $grid-max-width-xl;
    max-width: $grid-max-width-xl;
  }
}

.grid-full{
  @extend .grid;
  width: 100%;
  max-width: 100%;
}

//----------------------------------------------
//  Grid - Simple grid system based on flexbox
//  @requires flex-grid() - tools/_grid.scss
//----------------------------------------------
.grid-1-2 {
  @include flex-grid(1,$med:2,$pad-vert: $pad-col, $pad-horz: $pad-col)
}

.grid-1-3 {
  @include flex-grid(1,$med:3,$pad-vert: $pad-col, $pad-horz: $pad-col)
}

.grid-1-2-3 {
  @include flex-grid(1,$med:2,$lg:3, $pad-vert: $pad-col, $pad-horz: $pad-col)
}

//----------------------------------------------
//  Grid System - No Padding mod
//----------------------------------------------
[class*="grid"].no-pad {
  margin-left: 0;
  margin-right: 0;
  
  & > * {
    padding: 0;
  }
}
